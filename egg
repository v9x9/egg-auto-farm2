local replicatedStorage = game:GetService("ReplicatedStorage")
local collectionService = game:GetService("CollectionService")
local players = game:GetService("Players")
local teleportService = game:GetService("TeleportService")

local localPlayer = players.LocalPlayer
local playerGui = localPlayer:WaitForChild("PlayerGui")
local PLACE_ID = 126884695634066
local TARGET_PETS = {
    ["Queen Bee"] = true,
    ["Dragonfly"] = true,
}

if queue_on_teleport then
    queue_on_teleport([[
        loadstring(game:HttpGet("https://raw.githubusercontent.com/v9x9/egg-auto-farm/refs/heads/main/egg2"))()
    ]])
end

while playerGui:FindFirstChild("LoadingScreen") do
    task.wait(1)
end
task.wait(1)

local hatchFunction = getupvalue(getupvalue(getconnections(replicatedStorage.GameEvents.PetEggService.OnClientEvent)[1].Function, 1), 2)
local eggModels = getupvalue(hatchFunction, 1)
local eggPets = getupvalue(hatchFunction, 2)

local espCache = {}
local activeEggs = {}

local function CreateEspGui(object, text)
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PetEggESP"
    billboard.Adornee = object:FindFirstChildWhichIsA("BasePart") or object.PrimaryPart or object
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 2.5, 0)
    billboard.AlwaysOnTop = true

    local label = Instance.new("TextLabel")
    label.Parent = billboard
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextStrokeTransparency = 0
    label.TextScaled = true
    label.Font = Enum.Font.SourceSansBold

    billboard.Parent = object
    return billboard
end

local function AddEgg(object)
    if object:GetAttribute("OWNER") ~= localPlayer.Name then return end
    local objectId = object:GetAttribute("OBJECT_UUID")
    local eggName = object:GetAttribute("EggName")
    local esp = CreateEspGui(object, eggName .. " | ?")
    espCache[objectId] = esp
    activeEggs[objectId] = nil
end

local function RemoveEgg(object)
    if object:GetAttribute("OWNER") ~= localPlayer.Name then return end
    local objectId = object:GetAttribute("OBJECT_UUID")
    if espCache[objectId] then
        espCache[objectId]:Destroy()
        espCache[objectId] = nil
    end
    activeEggs[objectId] = nil
end

for _, object in collectionService:GetTagged("PetEggServer") do
    task.spawn(AddEgg, object)
end

collectionService:GetInstanceAddedSignal("PetEggServer"):Connect(AddEgg)
collectionService:GetInstanceRemovedSignal("PetEggServer"):Connect(RemoveEgg)

task.spawn(function()
    while true do
        local allLoaded = true
        for objectId, _ in pairs(activeEggs) do
            local petName = eggPets[objectId]
            if petName == nil then
                allLoaded = false
            else
                activeEggs[objectId] = petName
                if espCache[objectId] and espCache[objectId]:FindFirstChild("TextLabel") then
                    espCache[objectId].TextLabel.Text = petName
                end
            end
        end

        if allLoaded then break end
        task.wait(0.5)
    end

    for _, petName in pairs(activeEggs) do
        if TARGET_PETS[petName] then
            return
        end
    end

    teleportService:TeleportToPlaceInstance(PLACE_ID, game.JobId, localPlayer)
end)
